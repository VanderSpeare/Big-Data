/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
/**
 *
 * @author ADMIN
 */
public class ThemChamCong extends javax.swing.JFrame {

    private final String url = "jdbc:sqlserver://DESKTOP-HGI7VB9:1433;databaseName=QUANLYCHAMCONG;user=sa;password=thai;";

    /**
     * Creates new form ThemChamCong
     */
    public ThemChamCong() {
        
        initComponents();
        hienThiDuLieuBangChamCong();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Thêm châm công nhân viên");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(209, 14, 243, 33));

        jLabel2.setText("Tên nhân viên");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 76, 91, -1));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 73, 206, 29));

        jLabel3.setText("Số giờ");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 120, 91, 27));

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 122, 206, 32));

        jLabel4.setText("Ngày");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 172, 37, -1));

        jButton1.setText("Xác nhận");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 212, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 240, 570, 340));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ngày thường", "Ngày lễ", "Chủ nhật" }));
        getContentPane().add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, 210, 30));

        jButton2.setText("Thoát");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 10, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            // Lấy giá trị từ các thành phần trên giao diện
            String tenNhanVien = jTextField1.getText();
            String soGioLam = jTextField2.getText();
            String ngayCong = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
            String tenNgay = (String) jComboBox2.getSelectedItem();

            // Lấy MaNhanVien từ CSDL dựa trên tên nhân viên
            String maNhanVien = layMaNhanVien(tenNhanVien);
            
            if (maNhanVien.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy nhân viên có tên: " + tenNhanVien);
                return;
            }

            // Lấy MaNgay từ CSDL dựa trên tên ngày
            String maNgay = layMaNgay(tenNgay);
            
            if (maNgay.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy ngày có tên: " + tenNgay);
                return;
            }

            // Tạo MaBangChamCong tự động (có thể sử dụng UUID.randomUUID().toString())
            String maBangChamCong = "BC" + (int) (Math.random() * 10000);

            // Thêm dữ liệu vào bảng BANGCHAMCONG
            themDuLieuBangChamCong(maBangChamCong, maNgay, maNhanVien, ngayCong, Float.parseFloat(soGioLam));

             capNhatDuLieuJTable1();
    
            // Hiển thị thông báo thành công
            JOptionPane.showMessageDialog(this, "Thêm chấm công thành công!");

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi thêm chấm công. Vui lòng kiểm tra lại!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        TrangChu tc=new TrangChu();
        tc.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private String layMaNhanVien(String tenNhanVien) {
        String maNhanVien = "";
        try (Connection conn = DriverManager.getConnection(url);
             PreparedStatement stmt = conn.prepareStatement(
                     "SELECT MaNhanVien FROM NHANVIEN WHERE HoTen = ?")) {

            stmt.setString(1, tenNhanVien);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                maNhanVien = rs.getString("MaNhanVien");
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
        return maNhanVien;
    }

    private String layMaNgay(String tenNgay) {
        String maNgay = "";
        try (Connection conn = DriverManager.getConnection(url);
             PreparedStatement stmt = conn.prepareStatement(
                     "SELECT MaNgay FROM NGAY WHERE TenNgay = ?")) {

            stmt.setString(1, tenNgay);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                maNgay = rs.getString("MaNgay");
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
        return maNgay;
    }

    private void themDuLieuBangChamCong(String maBangChamCong, String maNgay, String maNhanVien, String ngayChamCong, float soGioLam) {
        try (Connection conn = DriverManager.getConnection(url);
             PreparedStatement stmt = conn.prepareStatement(
                     "INSERT INTO BANGCHAMCONG (MaBangChamCong, MaNgay, MaNhanVien, NgayChamCong, SoGioLamTrongNgay) " +
                             "VALUES (?, ?, ?, ?, ?)")) {

            stmt.setString(1, maBangChamCong);
            stmt.setString(2, maNgay);
            stmt.setString(3, maNhanVien);
            stmt.setString(4, ngayChamCong);
            stmt.setFloat(5, soGioLam);

            stmt.executeUpdate();

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
     private String layMaTaiKhoan() {
        String maTaiKhoan = "";
        // Lấy tên đăng nhập hiện tại (giả sử bạn đã lưu tên đăng nhập khi đăng nhập vào hệ thống)
        DangNhap frameDangNhap = new DangNhap();
        String tenDangNhap = frameDangNhap.getjTextField1();
        try (Connection conn = DriverManager.getConnection(url);
             PreparedStatement stmt = conn.prepareStatement(
                     "SELECT MaTK FROM TAIKHOAN WHERE TenDangNhap = ?")) {

            stmt.setString(1, tenDangNhap);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                maTaiKhoan = rs.getString("MaTK");
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
         JOptionPane.showMessageDialog(this, "Mã tài khoản: " + tenDangNhap);
        return maTaiKhoan;
    }

    private void themLichSuCapNhat(String maTaiKhoan, String maBangChamCong, String ngayCapNhat, String phuongThuc) {
        try (Connection conn = DriverManager.getConnection(url);
             PreparedStatement stmt = conn.prepareStatement(
                     "INSERT INTO LICHSUCAPNHAT (MaLSCN, MaTK, MaBangChamCong, NgayCapNhat, PhuongThuc) " +
                             "VALUES (?, ?, ?, ?, ?)")) {

            // Tạo MaLSCN tự động (có thể sử dụng UUID.randomUUID().toString())
            String maLichSuCapNhat = "LSCN" + (int) (Math.random() * 10000);

            stmt.setString(1, maLichSuCapNhat);
            stmt.setString(2, maTaiKhoan);
            stmt.setString(3, maBangChamCong);
            stmt.setString(4, ngayCapNhat);
            stmt.setString(5, phuongThuc);

            stmt.executeUpdate();

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    private void hienThiDuLieuBangChamCong() {
    try (Connection conn = DriverManager.getConnection(url);
         Statement stmt = conn.createStatement()) {

        // Thực hiện truy vấn kết hợp giữa bảng NHANVIEN và BANGCHAMCONG
        String query = "SELECT NHANVIEN.HoTen, BANGCHAMCONG.NgayChamCong, NGAY.TenNgay, BANGCHAMCONG.SoGioLamTrongNgay " +
                       "FROM NHANVIEN " +
                       "JOIN BANGCHAMCONG ON NHANVIEN.MaNhanVien = BANGCHAMCONG.MaNhanVien " +
                       "JOIN NGAY ON BANGCHAMCONG.MaNgay = NGAY.MaNgay";

        ResultSet rs = stmt.executeQuery(query);

        // Tạo DefaultTableModel để hiển thị dữ liệu trong jTable1
        javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel();
        model.addColumn("Họ Tên");
        model.addColumn("Ngày Chấm Công");
        model.addColumn("Tên Ngày");
        model.addColumn("Số Giờ Làm Trong Ngày");

        // Đọc dữ liệu từ ResultSet và thêm vào DefaultTableModel
        while (rs.next()) {
            String hoTen = rs.getString("HoTen");
            String ngayChamCong = rs.getString("NgayChamCong");
            String tenNgay = rs.getString("TenNgay");
            float soGioLamTrongNgay = rs.getFloat("SoGioLamTrongNgay");

            model.addRow(new Object[]{hoTen, ngayChamCong, tenNgay, soGioLamTrongNgay});
        }
        // Set DefaultTableModel cho jTable1
        jTable1.setModel(model);

    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Lỗi khi hiển thị dữ liệu. Vui lòng kiểm tra lại!");
    }
}

// Phương thức này được gọi sau khi thêm chấm công thành công
private void capNhatDuLieuJTable1() {
    // Gọi phương thức để hiển thị dữ liệu trong jTable1
    hienThiDuLieuBangChamCong();
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThemChamCong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThemChamCong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThemChamCong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThemChamCong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThemChamCong().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
